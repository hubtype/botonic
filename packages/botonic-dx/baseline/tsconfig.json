// see https://www.notion.so/Typescript-performance-7aa77701970d4d49b8399efcee1b0754
{
  "compilerOptions": {
    "allowUnreachableCode": false,
    "skipLibCheck": true,
    "baseUrl": "src",
    "paths": {
      "*": ["src/*", "lib/src/*", "types/*"]
    },
    // end of path dependent configuration
    "outDir": "lib",
    "declaration": true,
    "declarationDir": "lib",
    "sourceMap": true,
    "target": "ES2022",
    "module": "node16",
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "allowJs": true,
    // without typeRoots, it also checks @types of parent folders, which is desirable if you you want to have
    // common development dependencies on a parent package in a monorepo.
    //"typeRoots" : ["node_modules/@types"],

    //// React
    // See https://www.typescriptlang.org/tsconfig#jsx &
    // https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html#whats-different-in-the-new-transform on why
    // using react-jsx is better (new in react 17, but backported to 16.14.0)
    "jsx": "react-jsx",

    //performance
    "incremental": true,
    //https://github.com/microsoft/TypeScript/wiki/Performance#controlling-types-inclusion
    "types": [
      "@types/node" ////imports NODE_ENV="production/development"
    ],

    // lint options
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noImplicitReturns": true,
    "noUnusedLocals": true
  }
}
